{"title":"🍭Flags for 2021","date":"2021-10-26T16:56:21.000Z","date_formatted":{"ll":"Oct 27, 2021","L":"10/27/2021","MM-DD":"10-27"},"link":"2021/10/27/Flags-1","tags":["Flag"],"updated":"2022-01-03T16:38:54.816Z","content":"<p>2020 年是不同寻常的一年。因为疫情，宅家在过了个很长的年，对于我们忙碌于工作间的打工人们，得以安逸的度过了一个好年，很感激在一线抗疫的辛苦人员，让我们国家的疫情得以控制。✨<strong>其实哪有什么岁月安好，不过是有人替我们负重前行。</strong></p>\n<p>由于上家公司的业务和部门的调整，很遗憾我离开了上家的公司😶。这是我毕业后第一家入职的公司，期间还有很多同期入职的小伙伴们，一同成长。部门的工作流程规范，协作流程（DevOps） 和开发环境（脚手架、组件库）完善，期间学到的东西也是满满滴，日常还有前辈们的分享会。公司不大，当时还是个 7,8 百人的公司，正在做上市准备，不过后来小伙伴们也都慢慢的离开，感觉没内味了，后面公司的调整，我就离开了。裸辞那段时间，在家边玩边学习准备了两个月，后面去面了几家感觉很不错，小而美的公司，无奈还是水平不够吧，面试期间也是暴露了自己很多的不足。幸运的后面还是拿到了几家 offer，6月的时候选择入职了深信服，开启了另外的大厂工作旅程。</p>\n<p>在深信服工作的感受就是忙并且充实，往往刚处理完一个需求就是开始准备下一个需求，期间掌握了很多的开发小技巧，提高自己的编码效率，不然跟不上发版进度🙈（💬App 的进度总比我们前端快那么一两周）；另外就得吐槽一下项目的底层框架了，基于 Ext + NW.js，后面融合了 Vue，使用体验不是很良好，Ext 的入门门槛确实比较高，比我学习 React 感觉要吃力，可能也是现在用的人太少了，版本太老和缺少很多学习资料，碰到问题就只能看源码了，网上基本找不到什么答案👀。这个原因感觉也是导致开发效率不高的罪魁祸首，丢！</p>\n<p>生活上 2020 年还算是比较满意的，薪资比原本高了许多，公司福利还算阔以，生活水平好，体重自然也就不自觉的上去了 20 多斤😒。和女票感情稳定，10月30日的时候，我们家还有了新成员，带了一只英短蓝白肥来，一起给小猫咪搭了新家，还准备了好多吃的，开心🤗（写这篇 Flag 的时候已经是个小胖子了）。养猫确实是一件很治愈的事情，据说撸猫还能降低心脏病风险（听说的），2333。PS：猫屎真滴是很臭滴！铲屎久了也习惯了…</p>\n<p>现在新的一年到啦🎉，2021 年又是怎么样的一年呢？立 Flag 的时候到了，新的一年还真是十分的期待呢~💖</p>\n<hr>\n<h3 id=\"💡-2021---study-flags\">💡 2021 - Study Flags<a title=\"#💡-2021---study-flags\" href=\"#💡-2021---study-flags\"></a></h3>\n<h4 id=\"1.-解决阅读国外技术文档的英语障碍🌎\">1. 解决阅读国外技术文档的英语障碍🌎<a title=\"#1.-解决阅读国外技术文档的英语障碍🌎\" href=\"#1.-解决阅读国外技术文档的英语障碍🌎\"></a></h4>\n<p>一直感觉到语言限制了信息的获取，获取知识和信息存在语言障碍，虽然国内现在也有很多优秀的社区和知识平台，但是始终还是符合国内的大环境的一些技术和信息。世界有很多优秀的程序员，他们大部分在国外，不应该只把技术的视野限制在国内，所以 2021 年的头等 Flags 给了英语学习，目标是能阅读技术文章。</p>\n<h4 id=\"2.-ext-和-vue-框架原理🔫\">2. Ext 和 Vue 框架原理🔫<a title=\"#2.-ext-和-vue-框架原理🔫\" href=\"#2.-ext-和-vue-框架原理🔫\"></a></h4>\n<p>由于缺乏 Ext 的学习资料，阅读源码可能是最好也最困难的途径了，虽然已是 2000 年左右的框架了，但是现代框架都能依稀看见当时的影子，框架虽老，一些设计模式和解决方案总是经久不衰的。</p>\n<p>至于 Vue，是我第一个接触的框架，第二个是 React，用的差不多一年。Vue 是在我大学的时候学习的，基本也只能写写页面，无法掌握高级用法和精髓。</p>\n<p>今年能把 Vue 和 Ext 的一些原理搞懂，掌握高级用法和提高工作的开发效率是一个非常急迫的事情。另外在考虑的一件事就是，如何在这个框架层面上优化项目的底层框架和组件库，毕竟在开发的时候，公司的框架总是弄得我很糟心🤡</p>\n<h4 id=\"3.-前端工程化（webpack-和-node.js）🔨\">3. 前端工程化（Webpack 和 Node.js）🔨<a title=\"#3.-前端工程化（webpack-和-node.js）🔨\" href=\"#3.-前端工程化（webpack-和-node.js）🔨\"></a></h4>\n<p>虽说 2020 年底时候开始已经有些工具开始在国内浮出并且传播开来（如 Deno、Vite、esbuild 等），Webpack 复杂但还是实际使用的构建工具，Webpack 在 2021 年还是值得我继续学习深入的工具，毕竟工作中用的也是 Webpack 不是么~</p>\n<p>至于 Node.js 算是 JavaScript 在服务端的解决方案了，不过个人觉得还算是放在工程化上或者作为 BFF，作为服务端的话，Go 和 Java 这些还是主流。</p>\n<h4 id=\"4.-typescript💬\">4. TypeScript💬<a title=\"#4.-typescript💬\" href=\"#4.-typescript💬\"></a></h4>\n<p>Emmm，惭愧！没有用过😬，作为微软发布的 JavaScript 超集，各大框架都支持并且使用 TypeScript 重构项目的语言，如果不学习，我感觉估计会看不懂 debug 版的源码。另外，TypeScript 静态类型检查的特性，有助于避免日常开发产生的一些类型和隐蔽的问题，这个特性还是很吸引我的，以此提高项目代码的稳定性。</p>\n<p>PS：JavaScript 又向 OOP 迈了一步…🏃‍♀️</p>\n<p>后面的学习 Operation Dtails 会列在我的 XMind 里 …</p>\n","prev":{"title":"前端现代模块化机制","link":"2021/12/27/FE-1"},"plink":"https://imunoko.top/2021/10/27/Flags-1/","toc":[{"id":"💡-2021---study-flags","title":"💡 2021 - Study Flags","index":"1","children":[{"id":"1.-解决阅读国外技术文档的英语障碍🌎","title":"1. 解决阅读国外技术文档的英语障碍🌎","index":"1.1"},{"id":"2.-ext-和-vue-框架原理🔫","title":"2. Ext 和 Vue 框架原理🔫","index":"1.2"},{"id":"3.-前端工程化（webpack-和-node.js）🔨","title":"3. 前端工程化（Webpack 和 Node.js）🔨","index":"1.3"},{"id":"4.-typescript💬","title":"4. TypeScript💬","index":"1.4"}]}],"copyright":{"license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","author":"imunoko"},"reading_time":"1443 words in 7 min"}